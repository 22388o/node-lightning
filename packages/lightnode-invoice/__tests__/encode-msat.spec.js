const { expect } = require('chai');
const encodeMsat = require('../lib/encode-msat');

describe('encode-msat', () => {
  let tests = [
    ['1', '10p'], // 0.00000000001
    ['10', '100p'], // 0.0000000001
    ['100', '1n'], // 0.000000001
    ['1000', '10n'], // 0.00000001
    ['10000', '100n'], // 0.0000001
    ['100000', '1u'], // 0.000001
    ['1000000', '10u'], // 0.00001
    ['10000000', '100u'], // 0.0001
    ['100000000', '1m'], // 0.001
    ['1000000000', '10m'], // 0.01
    ['10000000000', '100m'], // 0.1
    ['100000000000', '1'], // 1
    ['1000000000000', '10'], // 10
    ['10000000000000', '100'], // 100

    ['250000000', '2500u'], // 0.0025
    ['100250000000', '1002500u'], // 1.0025
    ['100020050100', '1000200501n'], // 1.000200501
    ['112341234123', '1123412341230p'], // 1.12341234123
  ];
  for (let [input, expected] of tests) {
    it(`encode amount ${input} to ${expected}`, () => {
      expect(encodeMsat(input)).to.equal(expected);
    });
  }

  it('should throw if attempts to encode 0', () => {
    expect(() => encodeMsat('0')).to.throw();
  });
});
